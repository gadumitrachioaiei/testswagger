// Code generated by go-swagger; DO NOT EDIT.

package test

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/gadumitrachioaiei/testswagger/genserver/models"
)

// TestrawjsonOKCode is the HTTP code returned for type TestrawjsonOK
const TestrawjsonOKCode int = 200

/*TestrawjsonOK Success

swagger:response testrawjsonOK
*/
type TestrawjsonOK struct {

	/*
	  In: Body
	*/
	Payload *models.SomeObject `json:"body,omitempty"`
}

// NewTestrawjsonOK creates TestrawjsonOK with default headers values
func NewTestrawjsonOK() *TestrawjsonOK {

	return &TestrawjsonOK{}
}

// WithPayload adds the payload to the testrawjson o k response
func (o *TestrawjsonOK) WithPayload(payload *models.SomeObject) *TestrawjsonOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the testrawjson o k response
func (o *TestrawjsonOK) SetPayload(payload *models.SomeObject) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TestrawjsonOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*TestrawjsonDefault Unexpected error.

swagger:response testrawjsonDefault
*/
type TestrawjsonDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewTestrawjsonDefault creates TestrawjsonDefault with default headers values
func NewTestrawjsonDefault(code int) *TestrawjsonDefault {
	if code <= 0 {
		code = 500
	}

	return &TestrawjsonDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the testrawjson default response
func (o *TestrawjsonDefault) WithStatusCode(code int) *TestrawjsonDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the testrawjson default response
func (o *TestrawjsonDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the testrawjson default response
func (o *TestrawjsonDefault) WithPayload(payload *models.Error) *TestrawjsonDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the testrawjson default response
func (o *TestrawjsonDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TestrawjsonDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
